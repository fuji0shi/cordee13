generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Post {
    id          Int      @id @default(autoincrement())
    name        String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    createdById String
    createdBy   User     @relation(fields: [createdById], references: [id])

    @@index([name])
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    posts         Post[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model StatVoies {
    id       String @id @default(cuid())
    cotation String
    nombre   Int
}

model Membres {
    id                  String  @id @default(cuid())
    civilite            String
    prenom              String
    nom                 String
    date_naissance      String
    email               String
    tel                 String
    adresse             String
    code_postal         String
    ville               String
    licence_fsgt        String
    autre_club          String?
    nom_parent          String?
    licence_fsgt_parent String?
    nb_enfant           Int?
    contact_urgence     String?
    contact_urgence_tel String?
    implication_club    String?
    paiement            String?
    saison              String
}

model RegisterSendMail {
    id      String   @id @default(cuid())
    email   String
    link    String
    expires DateTime
}
